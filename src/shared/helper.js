import { Parser } from "node-sql-parser"; // Import the SQL parser

const sqlParser = new Parser(); // Initialize the parser

import {
  ArrowUturnLeftIcon,
  ArrowUturnRightIcon,
  PlayIcon,
  XMarkIcon,
} from "@heroicons/react/24/outline";

export const options = {
  chart: {
    height: 350,
    type: "bar",
    zoom: {
      enabled: false,
    },
  },
  plotOptions: {
    bar: {
      borderRadius: 10,
      borderRadiusApplication: "end",
      dataLabels: {
        position: "top",
      },
    },
  },

  yaxis: {
    axisBorder: {
      show: false,
    },
    axisTicks: {
      show: false,
    },
  },
  title: {
    text: "Monthly Revenue Generated by Client",
    floating: true,
    offsetY: 330,
    align: "center",
    style: {
      color: "#444",
    },
  },
};

export const queryResponseChartOptions = {
  chart: {
    zoom: {
      enabled: false,
    },
  },
  plotOptions: {
    bar: {
      borderRadius: 10,
      borderRadiusApplication: "end",
      columnWidth: "70%",
    },
  },
  dataLabels: {
    enabled: false,
  },
  stroke: {
    show: true,
    width: 2,
    colors: ["transparent"],
  },
  fill: {
    opacity: 1,
  },
  tooltip: {
    enabled: true,
  },

  noData: {
    text: "Your charts will appear here once you run a query. Enter your SQL query in the editor above.",
    align: "center",
    verticalAlign: "middle",
    offsetX: 0,
    offsetY: 0,
    style: {
      color: undefined,
      fontSize: "16px",
      fontFamily: undefined,
    },
  },
};

export const queryResponseChartLineOptions = {
  chart: {
    type: "line",
    zoom: {
      enabled: false,
    },
  },
  // stroke: {
  //   show: true,
  //   width: 2,
  //   colors: ["transparent"],
  // },
  // fill: {
  //   opacity: 1,
  // },
  tooltip: {
    enabled: true,
  },

  noData: {
    text: "Your charts will appear here once you run a query. Enter your SQL query in the editor above.",
    align: "center",
    verticalAlign: "middle",
    offsetX: 0,
    offsetY: 0,
    style: {
      color: undefined,
      fontSize: "16px",
      fontFamily: undefined,
    },
  },
};

export const editorEvents = [
  {
    name: "Clear",
    icon: XMarkIcon,
    action: (editor) => {
      editor.setValue("");
    },
  },
  {
    name: "Undo",
    icon: ArrowUturnLeftIcon,
    action: (editor) => {
      editor.trigger("source", "undo", null);
    },
  },
  {
    name: "Redo",
    icon: ArrowUturnRightIcon,
    action: (editor) => {
      editor.trigger("source", "redo", null);
    },
  },
  {
    name: "Run Query",
    icon: PlayIcon,
  },
];

export const parseColumns = (query) => {
  try {
    const ast = sqlParser.astify(query, { database: "MySQL" }); // Parse SQL query into AST
    const columns = [];

    // Check if the AST is a SELECT query
    if (Array.isArray(ast)) {
      throw new Error("Multiple queries are not supported.");
    }

    if (ast.type === "select" && ast.columns) {
      for (const column of ast.columns) {
        // Ensure each column is a simple column reference
        if (column.expr?.type === "column_ref" && !column.as) {
          columns.push(column.expr.column); // Extract column names
        } else {
          console.warn("Ignored non-column reference:", column);
        }
      }
    }

    return columns;
  } catch (error) {
    console.error("Error parsing query:", error.message);
    return [];
  }
};
